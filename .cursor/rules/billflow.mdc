---
alwaysApply: true
---

# =========================
# BILLFLOW SaaS RULES FILE
# =========================

project.name = Billflow
project.type = SaaS (Fatura ve Abonelik Takibi)
project.target_users = Freelancer, Ajans, KOBİ
project.primary_stack = Next.js (App Router) + Tailwind + Prisma + Shadcn UI

# === CORE MODULES ===

modules = [
  "Authentication",
  "Dashboard",
  "Invoices",
  "Customers",
  "Subscriptions",
  "Reports",
  "Settings",
  "Team Management",
  "Integrations",
  "Billing & Plans"
]

# === AUTH RULES ===
auth.methods = ["email_password", "magic_link"]
auth.pages = ["login", "register", "forgot-password", "reset-password"]
auth.otp = optional
auth.redirect_after_login = "/dashboard"
auth.session_management = required

# === ROUTING STRUCTURE ===
routes.protected = [
  "/dashboard",
  "/invoices",
  "/customers",
  "/subscriptions",
  "/settings",
  "/team"
]
routes.public = ["/", "/login", "/register", "/pricing"]

# === ROLE-BASED ACCESS CONTROL ===
roles = [
  "Owner",
  "Admin",
  "Accountant",
  "Viewer"
]

roles.permissions = {
  "Owner": "Full access to all modules including billing and team",
  "Admin": "Create/edit invoices, customers, subscriptions",
  "Accountant": "Read-only invoices and financial reports",
  "Viewer": "Dashboard and read-only data access"
}

# === SETTINGS MODULE STRUCTURE ===
settings.sections = [
  "Profile",
  "Billing",
  "Invoices",
  "Integrations",
  "Team"
]

settings.profile.fields = ["avatar", "full_name", "email", "password_change"]
settings.billing.info = ["active_plan", "payment_method", "invoices_history"]
settings.invoices.config = ["prefix", "template", "default_currency", "tax"]
settings.integrations.groups = {
  "Payments": ["Stripe", "iyzico"],
  "Accounting": ["QuickBooks", "Xero"],
  "Notifications": ["SendGrid", "Mailgun", "Twilio", "Slack"],
  "Automation": ["Zapier", "Webhook"]
}
settings.team.features = ["invite", "role_assignment", "remove", "resend_invite"]

# === BILLING / PLAN STRUCTURE ===
plans = [
  {name: "Free", users: 1, customers: 5},
  {name: "Starter", users: 3, customers: 50},
  {name: "Pro", users: 10, customers: "unlimited"},
  {name: "Business", users: 25, customers: "unlimited"}
]
billing.provider = "Stripe"
billing.webhooks = ["subscription_updated", "invoice_paid", "payment_failed"]

# === INVOICE MODULE ===
invoice.statuses = ["draft", "sent", "paid", "overdue"]
invoice.fields = ["title", "items", "customer", "due_date", "notes", "tax"]
invoice.pdf = true
invoice.email_send = true
invoice.repeat = true

# === SUBSCRIPTIONS ===
subscriptions.features = [
  "recurring_payment",
  "cancel/pause",
  "trial_periods",
  "plan_mapping_to_customers"
]

# === CUSTOMERS ===
customer.fields = ["name", "email", "company", "tags", "notes"]
customer.view_links = ["invoices", "subscriptions"]

# === TEAM ===
team.roles = roles
team.limits_by_plan = true
team.invite_flow = {
  "send_email_invite",
  "accept_with_registration",
  "set_password"
}

# === DASHBOARD CARDS ===
dashboard.widgets = [
  "monthly_revenue_chart",
  "invoice_summary",
  "subscription_activity",
  "recent_customers",
  "outstanding_invoices"
]

# === FILE STRUCTURE CONVENTIONS ===
directories.structure = {
  "/app": "All route handlers and pages",
  "/components": "All UI and reusable components",
  "/lib": "Helpers and utility logic (stripe, pdf, auth, charts)",
  "/prisma": "Database schema and seed scripts",
  "/types": "Custom types and enums",
  "/public": "Static assets and brand logos"
}

# === DESIGN SYSTEM ===
design.framework = "Tailwind CSS"
design.components = "shadcn/ui"
design.charts = "Recharts or ApexCharts"
design.pdf = "@react-pdf/renderer or pdf-lib"

# === API LAYER ===
api.pattern = "REST or RPC via Server Actions"
api.auth_protection = "Middleware / Auth guards"
api.rate_limits = "Optional per plan"

# === NAMING CONVENTIONS ===
components.naming = "PascalCase"
utils.naming = "camelCase"
routes.naming = "dash-case"
enums.naming = "UPPER_SNAKE_CASE"

# === AI SUGGESTIONS PRIORITY ===
suggest.code.style = "production-grade"
suggest.ui.style = "minimalist, elegant, whitespace-heavy"
suggest.logic = "scalable, reusable, well-typed"

# === NOTES ===
note.project_goal = "To streamline subscription-based invoicing for small teams and freelancers with clear UI and Stripe-powered payments"
note.export_formats = ["PDF", "Email"]
note.dev_mode = "modular, extendable, clean architecture"

# === END ===
# =========================
# BILLFLOW SaaS RULES FILE
# =========================

project.name = Billflow
project.type = SaaS (Fatura ve Abonelik Takibi)
project.target_users = Freelancer, Ajans, KOBİ
project.primary_stack = Next.js (App Router) + Tailwind + Prisma + Shadcn UI

# === CORE MODULES ===

modules = [
  "Authentication",
  "Dashboard",
  "Invoices",
  "Customers",
  "Subscriptions",
  "Reports",
  "Settings",
  "Team Management",
  "Integrations",
  "Billing & Plans"
]

# === AUTH RULES ===
auth.methods = ["email_password", "magic_link"]
auth.pages = ["login", "register", "forgot-password", "reset-password"]
auth.otp = optional
auth.redirect_after_login = "/dashboard"
auth.session_management = required

# === ROUTING STRUCTURE ===
routes.protected = [
  "/dashboard",
  "/invoices",
  "/customers",
  "/subscriptions",
  "/settings",
  "/team"
]
routes.public = ["/", "/login", "/register", "/pricing"]

# === ROLE-BASED ACCESS CONTROL ===
roles = [
  "Owner",
  "Admin",
  "Accountant",
  "Viewer"
]

roles.permissions = {
  "Owner": "Full access to all modules including billing and team",
  "Admin": "Create/edit invoices, customers, subscriptions",
  "Accountant": "Read-only invoices and financial reports",
  "Viewer": "Dashboard and read-only data access"
}

# === SETTINGS MODULE STRUCTURE ===
settings.sections = [
  "Profile",
  "Billing",
  "Invoices",
  "Integrations",
  "Team"
]

settings.profile.fields = ["avatar", "full_name", "email", "password_change"]
settings.billing.info = ["active_plan", "payment_method", "invoices_history"]
settings.invoices.config = ["prefix", "template", "default_currency", "tax"]
settings.integrations.groups = {
  "Payments": ["Stripe", "iyzico"],
  "Accounting": ["QuickBooks", "Xero"],
  "Notifications": ["SendGrid", "Mailgun", "Twilio", "Slack"],
  "Automation": ["Zapier", "Webhook"]
}
settings.team.features = ["invite", "role_assignment", "remove", "resend_invite"]

# === BILLING / PLAN STRUCTURE ===
plans = [
  {name: "Free", users: 1, customers: 5},
  {name: "Starter", users: 3, customers: 50},
  {name: "Pro", users: 10, customers: "unlimited"},
  {name: "Business", users: 25, customers: "unlimited"}
]
billing.provider = "Stripe"
billing.webhooks = ["subscription_updated", "invoice_paid", "payment_failed"]

# === INVOICE MODULE ===
invoice.statuses = ["draft", "sent", "paid", "overdue"]
invoice.fields = ["title", "items", "customer", "due_date", "notes", "tax"]
invoice.pdf = true
invoice.email_send = true
invoice.repeat = true

# === SUBSCRIPTIONS ===
subscriptions.features = [
  "recurring_payment",
  "cancel/pause",
  "trial_periods",
  "plan_mapping_to_customers"
]

# === CUSTOMERS ===
customer.fields = ["name", "email", "company", "tags", "notes"]
customer.view_links = ["invoices", "subscriptions"]

# === TEAM ===
team.roles = roles
team.limits_by_plan = true
team.invite_flow = {
  "send_email_invite",
  "accept_with_registration",
  "set_password"
}

# === DASHBOARD CARDS ===
dashboard.widgets = [
  "monthly_revenue_chart",
  "invoice_summary",
  "subscription_activity",
  "recent_customers",
  "outstanding_invoices"
]

# === FILE STRUCTURE CONVENTIONS ===
directories.structure = {
  "/app": "All route handlers and pages",
  "/components": "All UI and reusable components",
  "/lib": "Helpers and utility logic (stripe, pdf, auth, charts)",
  "/prisma": "Database schema and seed scripts",
  "/types": "Custom types and enums",
  "/public": "Static assets and brand logos"
}

# === DESIGN SYSTEM ===
design.framework = "Tailwind CSS"
design.components = "shadcn/ui"
design.charts = "Recharts or ApexCharts"
design.pdf = "@react-pdf/renderer or pdf-lib"

# === API LAYER ===
api.pattern = "REST or RPC via Server Actions"
api.auth_protection = "Middleware / Auth guards"
api.rate_limits = "Optional per plan"

# === NAMING CONVENTIONS ===
components.naming = "PascalCase"
utils.naming = "camelCase"
routes.naming = "dash-case"
enums.naming = "UPPER_SNAKE_CASE"

# === AI SUGGESTIONS PRIORITY ===
suggest.code.style = "production-grade"
suggest.ui.style = "minimalist, elegant, whitespace-heavy"
suggest.logic = "scalable, reusable, well-typed"

# === NOTES ===
note.project_goal = "To streamline subscription-based invoicing for small teams and freelancers with clear UI and Stripe-powered payments"
note.export_formats = ["PDF", "Email"]
note.dev_mode = "modular, extendable, clean architecture"

# === END ===
